from minio import Minio
from pyspark.sql import SparkSession
import os, tempfile, shutil

# ===== CONFIG =====
minio_client = Minio(
    "minio:9000",
    access_key="minioadmin",
    secret_key="minioadmin",
    secure=False
)

bucket = "datalake"
prefix = "silver/tags_produtos/"   # mude para outro silver se quiser

# ===== BAIXAR TODOS OS PARQUETS =====
tmp_dir = tempfile.mkdtemp(prefix="read_parquet_minio_")
local_files = []

for obj in minio_client.list_objects(bucket, prefix=prefix, recursive=True):
    if obj.object_name.lower().endswith(".parquet"):
        local_path = os.path.join(tmp_dir, os.path.basename(obj.object_name))
        minio_client.fget_object(bucket, obj.object_name, local_path)
        local_files.append(local_path)

if not local_files:
    raise Exception(f"Nenhum parquet encontrado em {bucket}/{prefix}")

print(f"{len(local_files)} arquivos baixados de {bucket}/{prefix}")

# ===== LER LOCALMENTE NO SPARK =====
spark = (
    SparkSession.builder
    .appName("ReadParquetsFromMinIO_via_SDK")
    .getOrCreate()
)

df = spark.read.parquet(*[f"file://{p}" for p in local_files])

# ===== PRINTAR AS INFORMAÇÕES =====
print("SCHEMA:")
df.printSchema()

print("EXEMPLO DE LINHAS:")
df.show(20, truncate=False)

print(f"Total de linhas: {df.count()}")

# ===== LIMPAR TMP (opcional) =====
shutil.rmtree(tmp_dir, ignore_errors=True)
